angular.module("chatApp",["ng","ngRoute","ui.bootstrap"]).config(["$routeProvider",function(e){e.when("/login",{templateUrl:"/client/views/login.html",controller:"LoginController"}).when("/home",{templateUrl:"/client/views/home.html",controller:"HomeController"}).otherwise({redirectTo:"/home"})}]);
angular.module("chatApp").controller("ConfirmInstanceController",["$scope","$modalInstance","roomObject",function(n,o,c){n.roomObj=c,n.returnValue=!0,n.ok=function(){o.close(n.returnValue)},n.cancel=function(){o.dismiss("cancel")}}]);
angular.module("chatApp").controller("HomeController",["$scope","$location","socket","dataFactory","$modal",function(e,o,n,t,r){e.connectedUser="",e.currentOpen={},e.currentTopic="Welcome",e.newRoomItem="",e.showRooms=!0,e.inputText="",e.openItems={},e.openTabs=[],e.rooms={},e.getRooms=function(){n.emit("rooms")},e.joinRoom=function(o){var t={room:o.name,pass:o.password};n.emit("joinroom",t,function(r,s){if(r){var m="Room-"+t.room,c={type:"Room",name:t.room,topic:"",messages:[],users:[],locked:!1};if(m in e.openItems||!t.pass||(c.locked=!0),e.openItems[m]=c,e.openTabs.push(m),e.currentOpen={ID:m},e.getRooms(),o.topic){var i={room:o.name,topic:o.topic};n.emit("settopic",i)}}else"banned"===s?console.log("You are banned fcker !!!"):"wrong password"===s&&console.log("wrong password")})},e.sendText=function(){if(e.inputText&&"Room"===e.openItems[e.currentOpen.ID].type)return n.emit("sendmsg",{roomName:e.openItems[e.currentOpen.ID].name,msg:e.inputText}),void(e.inputText="");var o={message:e.inputText,nick:e.connectedUser};e.inputText&&"User"===e.openItems[e.currentOpen.ID].type&&n.emit("privatemsg",{nick:e.openItems[e.currentOpen.ID].chatWith,message:e.inputText},function(n){n?(e.inputText="",e.openItems[e.currentOpen.ID].messages.push(o)):console.log("couldnt send message")})},e.privateChat=function(o){if(o!==e.connectedUser){var n="User-"+o;if(e.openTabs.indexOf(n)>-1)return void(e.currentOpen.ID=n);var t={};t[o]=o,t[e.connectedUser]=e.connectedUser;var r={type:"User",name:o,topic:"Private Chat with "+o,messages:[],users:t,chatWith:o};n in e.openItems||(e.openItems[n]=r),e.currentOpen={ID:n},e.openTabs.push(n)}},n.on("roomlist",function(o){e.rooms=o}),n.on("updateusers",function(o,n,t){console.log("updateusers",o," - ",n," - ",t);var r="Room-"+o;if(r in e.openItems)return e.openItems[r].users=n,void(e.openItems[r].ops=t);var s="User-"+o;return s in e.openItems?(e.openItems[s].users=n,void(e.openItems[s].ops=t)):void 0}),n.on("updatetopic",function(o,n){var t="Room-"+o;t in e.openItems&&(e.openItems[t].topic=n)}),n.on("recv_privatemsg",function(o,n){var t="User-"+o,r={message:n,nick:o},s=[];if(s.push(r),t in e.openItems)e.openItems[t].messages.push(r);else{var m={};m[e.connectedUser]=e.connectedUser,m[o]=o;var c={type:"User",name:o,topic:"Private Chat with "+o,messages:s,users:m,chatWith:o};e.openItems[t]=c,e.openTabs.push(t)}}),n.on("servermessage",function(o,n,t){console.log("recv_privatemsg",o," - ",n," - ",t),e.getRooms()}),n.on("kicked",function(o,n){var t="Room-"+o;t in e.openItems&&n===e.connectedUser&&e.closeTab(t),e.getRooms()}),n.on("banned",function(o,n,t){console.log("banned",o,n,t);var r="Room-"+o;r in e.openItems&&n===e.connectedUser&&e.closeTab(r),e.getRooms()}),n.on("opped",function(){e.getRooms()}),n.on("deopped",function(){e.getRooms()}),n.on("updatechat",function(o,n){var t="Room-"+o;t in e.openItems&&(e.openItems[t].messages=n),e.getRooms()}),n.on("getrooms",function(){console.log("Rooms have changed"),e.getRooms()}),e.show=function(o){e.showRooms=o},e.open=function(o){e.currentOpen.ID=o},e.closeTab=function(o){var t=0,r=0;if("Room"===e.openItems[o].type){t=e.openTabs.indexOf(o);var s=e.openItems[o].name;delete e.openItems[o],e.currentOpen.ID===o&&(r=t-1,e.currentOpen.ID=e.openTabs[r]),t>-1&&e.openTabs.splice(t,1),n.emit("partroom",s)}else t=e.openTabs.indexOf(o),e.currentOpen.ID===o&&(r=t-1,e.currentOpen.ID=e.openTabs[r]),t>-1&&e.openTabs.splice(t,1)},e.openChatRoom=function(o){var n={name:o},t="Room-"+o,r=e.openTabs.indexOf(t);return r>-1?void(e.currentOpen.ID=t):e.rooms[o].locked?void e.loginPassword(n):void e.joinRoom(n)},e.ban=function(o){n.emit("ban",{user:o,room:e.openItems[e.currentOpen.ID].name},function(){e.getRooms()})},e.unBan=function(o){n.emit("unban",{user:o,room:e.openItems[e.currentOpen.ID].name},function(){e.getRooms()})},e.kick=function(o){n.emit("kick",{user:o,room:e.openItems[e.currentOpen.ID].name})},e.addOp=function(o){n.emit("op",{user:o,room:e.openItems[e.currentOpen.ID].name})},e.deOp=function(o){n.emit("deop",{user:o,room:e.openItems[e.currentOpen.ID].name})},e.createRoom=function(){var o=r.open({templateUrl:"/client/views/createRoomModal.html",controller:"ModalInstanceController"});o.result.then(function(o){e.newRoomItem=o,e.newRoomItem.name in e.rooms||(e.joinRoom(e.newRoomItem),e.newRoomItem="")})},e.loginPassword=function(o){var n={title:"Password is required for Room "+o.name,inputName:"Room Password",placeholder:"Enter Room Password",error:"Password is required"},t=r.open({templateUrl:"/client/views/setRoomItem.html",controller:"SetRoomInstanceController",resolve:{roomObject:function(){return n}}});t.result.then(function(n){o.password=n,e.joinRoom(o)})},e.setTopic=function(){var o=e.openItems[e.currentOpen.ID].name,t={title:"Set Topic for Room "+o,inputName:"Room Topic",placeholder:"Enter Room Topic",error:"Topic is required"},s=r.open({templateUrl:"/client/views/setRoomItem.html",controller:"SetRoomInstanceController",resolve:{roomObject:function(){return t}}});s.result.then(function(e){var t={room:o,topic:e};n.emit("settopic",t)})},e.setPassword=function(){var o=e.openItems[e.currentOpen.ID].name,t={title:"Set Password for Room "+o,inputName:"New Password",placeholder:"Enter New Password",error:"Password is required"},s=r.open({templateUrl:"/client/views/setRoomItem.html",controller:"SetRoomInstanceController",resolve:{roomObject:function(){return t}}});s.result.then(function(e){var t={room:o,password:e};n.emit("setpassword",t)})},e.removePassword=function(){var o=e.openItems[e.currentOpen.ID].name,t={title:"Remove Password for Room "+o},s=r.open({templateUrl:"/client/views/confirmModal.html",controller:"ConfirmInstanceController",resolve:{roomObject:function(){return t}}});s.result.then(function(){var e={room:o};n.emit("removepassword",e)})},e.listItems=function(o){var n;if("ops"===o)n={title:"Ops List",isOp:e.openItems[e.currentOpen.ID].ops[e.connectedUser],users:e.openItems[e.currentOpen.ID].ops,connectedUser:e.connectedUser,buttonLabel:"Remove from Ops"};else{if("banned"!==o)return;n={title:"Banned List",isOp:e.openItems[e.currentOpen.ID].ops[e.connectedUser],users:e.rooms[e.openItems[e.currentOpen.ID].name].banned,connectedUser:e.connectedUser,buttonLabel:"Unban"}}var t=r.open({templateUrl:"/client/views/listModal.html",controller:"ListInstanceController",resolve:{roomObject:function(){return n}}});t.result.then(function(n){"op"===o?e.deOp(n):"banned"===o&&e.unBan(n)})};var s=function(){if(e.connectedUser=t.getConnectedUser(),e.connectedUser){e.getRooms();var n={name:"lobby"};e.joinRoom(n)}else o.path("/login")};s()}]);
angular.module("chatApp").controller("ListInstanceController",["$scope","$modalInstance","roomObject",function(o,n,c){o.roomObj=c,o.ok=function(o){n.close(o)},o.close=function(){n.dismiss("cancel")}}]);
angular.module("chatApp").controller("LoginController",["$scope","$location","socket","dataFactory",function(e,r,n,o){e.login="login",e.user={username:""},e.connectedUser=o.getConnectedUser(),e.errors={available:!1},e.submitted=!1,e.login=function(){e.submitted=!0,e.user.username&&n.emit("adduser",e.user.username,function(n){n?(o.setConnectedUser(e.user.username),r.path("/rooms")):e.errors.available=!0})}}]);
angular.module("chatApp").controller("ModalInstanceController",["$scope","$modalInstance",function(o,n){o.submitted=!1,o.newRoom={},o.ok=function(){return o.newRoom.name?void n.close(o.newRoom):void(o.submitted=!0)},o.cancel=function(){n.dismiss("cancel")}}]);
angular.module("chatApp").controller("SetRoomInstanceController",["$scope","$modalInstance","roomObject",function(e,o,n){e.roomObj=n,e.returnValue="",e.submitted=!1,e.ok=function(){return e.returnValue?void o.close(e.returnValue):void(e.submitted=!0)},e.cancel=function(){o.dismiss("cancel")}}]);
angular.module("chatApp").directive("chatScrollDirective",[function(){return{restrict:"A",link:function(c,t){$(t).focus()}}}]);
angular.module("chatApp").directive("enterDirective",[function(){return{restrict:"A",scope:{enter:"&"},link:function(e,n){$(n).bind("keypress",function(n){var r=n.keyCode||n.which;13==r&&e.enter()})}}}]);
angular.module("chatApp").directive("focusDirective",["$timeout","$parse",function(c){return{restrict:"A",link:function(t,u){t.$watch("focus",function(t){t===!0&&c(function(){$(u).focus()})}),t.focus=!0}}}]);
angular.module("chatApp").directive("scrollDirective",[function(){return{restrict:"A",link:function(n){n.$on("newData",function(){console.log("new Data")})}}}]);
angular.module("chatApp").factory("dataFactory",[function(){var n="";return{setConnectedUser:function(t){n=t},getConnectedUser:function(){return n},logout:function(){n=""}}}]);
angular.module("chatApp").filter("usernameFilter",["dataFactory",function(e){return function(t){return t===e.getConnectedUser()?"You":t}}]);
angular.module("chatApp").factory("socket",["$rootScope",function(n){var t=io.connect("http://localhost:8080");return{on:function(o,a){t.on(o,function(){var o=arguments;n.$apply(function(){a.apply(t,o)})})},emit:function(o,a,c){t.emit(o,a,function(){var o=arguments;n.$apply(function(){c&&c.apply(t,o)})})}}}]);